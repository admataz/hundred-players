{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../client/Arena.svelte",
    "../client/Ball.svelte",
    "../client/Player.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Player from \"./Player.svelte\";\n  import Ball from \"./Ball.svelte\";\n  export let playerPositions = {};\n  export let renderedPlayers = [];\n  export let currentPlayers = [];\n  export let ballPos = {\n    xPos: 100,\n    yPos: 100,\n    speed: 0,\n    hForce: 1,\n    vForce: 1\n  };\n\n  export let playerFriction = 0.2;\n  export let ballFriction = 0.1;\n\n  export let arenaSize = { width: 500, height: 200 };\n\n  const animStep = () => {\n    Object.entries(playerPositions).forEach(([key, p]) => {\n      if (p.speed > playerFriction / 2) {\n        p.speed -= playerFriction;\n      } else {\n        p.speed = 0;\n      }\n      if (ballPos.speed > ballFriction / 2) {\n        ballPos.speed -= ballFriction;\n      } else {\n        ballPos.speed = 0;\n      }\n\n      p.xPos =\n        (p.xPos + p.hForce * p.speed + arenaSize.width) % arenaSize.width;\n      p.yPos =\n        (p.yPos + p.vForce * p.speed + arenaSize.height) % arenaSize.height;\n\n      if (\n        Math.abs(ballPos.xPos - p.xPos) < 20 &&\n        Math.abs(ballPos.yPos - p.yPos) < 20\n      ) {\n        ballPos.speed = p.speed;\n        if (p.xPos > ballPos.xPos) {\n          ballPos.hForce = -1 * Math.random();\n          ballPos.xPos -= 10;\n        } else {\n          ballPos.hForce = Math.random();\n          ballPos.xPos += 10;\n        }\n\n        if (p.yPos > ballPos.yPos) {\n          ballPos.yPos -= 10;\n          ballPos.vForce = -1 * Math.random();\n        } else {\n          ballPos.yPos += 10;\n          ballPos.vForce = Math.random();\n        }\n      }\n    });\n\n    renderedPlayers = currentPlayers.map(m => ({\n      ...m,\n      ...playerPositions[m.id]\n    }));\n\n    if (ballPos.xPos >= arenaSize.width) {\n      ballPos.hForce = -1;\n    }\n\n    if (ballPos.xPos < 0) {\n      ballPos.hForce = 1;\n    }\n\n    if (ballPos.yPos >= arenaSize.height) {\n      ballPos.vForce = -1;\n    }\n\n    if (ballPos.yPos < 0) {\n      ballPos.vForce = 1;\n    }\n\n    ballPos = {\n      ...ballPos,\n      xPos: ballPos.xPos + ballPos.hForce * ballPos.speed,\n      yPos: ballPos.yPos + ballPos.vForce * ballPos.speed\n    };\n    window.requestAnimationFrame(animStep);\n  };\n\n  animStep();\n\n  // $: console.log(playerPositions);\n</script>\n\n<style>\n  main {\n    border: 1px solid #000;\n    position: relative;\n  }\n</style>\n\n<main style=\"width:{arenaSize.width}px; height: {arenaSize.height}px\">\n  <Ball {...ballPos} />\n  {#each renderedPlayers as player}\n    <Player {player} xPos={player.xPos} yPos={player.yPos} />\n  {/each}\n</main>\n",
    "<script>\n  export let xPos = 0;\n  export let yPos = 0;\n</script>\n\n<style>\n  .ball {\n    position: absolute;\n    border: 1px solid #000;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px; \n  }\n</style>\n\n<div class=\"ball\" style=\"top:{`${yPos}px`}; left:{`${xPos}px`}\" />\n",
    "<script>\n  export let player;\n  export let xPos = 0;\n  export let yPos = 0;\n</script>\n\n<style>\n  .player {\n    position: absolute;\n  }\n</style>\n\n<div class=\"player\" style=\"top:{`${yPos}px`}; left:{`${xPos}px`}\">{player.info.name}</div>\n"
  ],
  "names": [],
  "mappings": "AA+FE,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,QAAQ,CAAE,QAAQ,AACpB,CAAC;AC5FD,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC;ACLD,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,AACpB,CAAC"
}